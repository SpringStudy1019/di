<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.trend_gaza.plan.repository.PlanMapper">

	<resultMap id="attractionPlan" type="com.ssafy.trend_gaza.plan.entity.AttractionPlan">
		<result property="attractionPlanId" column="attraction_plan_id" />
		<result property="planIdx" column="plan_idx" />
		<result property="attractions" column="attraction" typeHandler="com.ssafy.trend_gaza.plan.repository.JSONTypeHandler" />
	</resultMap>
	
	<resultMap id="plan" type="plan">
		<result property="planIdx" column="plan_idx" />
		<result property="title" column="title" />
		<result property="startDate" column="start_date" />
		<result property="endDate" column="end_date" />
		<result property="userId" column="user_id" />
	</resultMap>

	<select id="getAttractionPlan" resultMap="attractionPlan">
		SELECT * FROM attraction_plan
	</select>
	
	<resultMap id="planResponse" type="planResponse">
		<result property="planIdx" column="plan_idx"/>
		<result property="title" column="title"/>
		<result property="startDate" column="start_date"/>
		<result property="endDate" column="end_date"/>
		<result property="userCount" column="user_count"/>
	</resultMap>
	
	<resultMap id="selectAttractionPlanResponse" type="selectAttractionPlanResponse">
		<result property="title" column="title" />
		<result property="imgUrl" column="first_image" />
		<result property="address" column="addr1" />
		<result property="contentId" column="content_id" />
		<result property="order" column="orderNum" />
		<result property="orderDate" column="orderDate" />
	</resultMap>
	
	<resultMap id="planGetModifyResponse" type="planGetModifyResponse">
		<result property="title" column="title" />
		<result property="startDate" column="start_date" />
		<result property="endDate" column="end_date" />
	</resultMap>
	
	<insert id="registerPlan" parameterType="map">
		insert into attraction_plan(attraction, plan_idx)
		values(#{attraction}, #{planIdx})
	</insert>
	
	<update id="modifySelectPlan" parameterType="map">
		update attraction_plan
		set attraction = #{attraction}
		where attraction_plan_id = #{attractionPlanId}
	</update>
	
	<delete id="deleteMyPlan" parameterType="map">
		delete
		from user_plan
		where plan_idx = #{planIdx} and user_id = #{userId}
	</delete>
	
	<!-- 여행 계획 세우기 방을 만든 사람인가 -->
	<select id="IsPlanOwner" parameterType="map" resultMap="plan">
		select *
		from plan
		where plan_idx = #{planIdx} and user_id = #{userId}
	</select>
	
	<!-- 방장이 탈퇴 -->
	<delete id="deletePlan" parameterType="map">
		DELETE 
		FROM plan
		WHERE user_id = #{userId} and plan_idx = #{planIdx}
	</delete>

	<select id="getMyPlans" parameterType="string" resultMap="planResponse">
		SELECT p.plan_idx, title, start_date, end_date, COUNT(up.user_id) AS user_count
		  FROM plan p
		  LEFT JOIN user_plan up ON p.plan_idx = up.plan_idx AND up.user_id = #{userId}
		  WHERE p.user_id = #{userId} OR up.user_id IS NOT NULL
		  GROUP BY p.plan_idx
	</select>
	
	<!-- 여행에 참여하기 -->
	<insert id="joinPlan" parameterType="map">
		insert into user_plan(user_id, plan_idx)
		values(#{userId}, #{planIdx})
	</insert>
	
	<!-- 여행 계획표 (방) 만들기 -->
	<insert id="setPlan" parameterType="setPlanRequest">
		insert into plan(title, start_date, end_date, user_id)
		values(#{title}, #{startDate}, #{endDate}, #{userId})
	</insert>
	
	<!-- 초대 수락할 여행 1개 조회하기 -->
	<select id="getInvitedPlan" parameterType="acceptInvitationRequest" resultType="int">
		select plan_idx from plan
		where title=#{title} and user_id=#{creatorId}
	</select>
	
	<!-- 내가 초대된 여행 다 가져오기 -->
	<select id="getInvitedPlans" parameterType="String" resultMap="plan">
		SELECT p.*
		  FROM plan p
		  JOIN user_plan up ON p.plan_idx = up.plan_idx
		  WHERE up.user_id = #{userId}
	</select>
	
	
	<!-- 내가 만든 여행 조회하기 -->
	<select id="getCreatedPlans" parameterType="String" resultMap="planResponse">
		SELECT p.plan_idx, p.title, p.start_date, p.end_date, COUNT(up.user_id) AS user_count
		FROM plan p LEFT JOIN user_plan up ON p.plan_idx = up.plan_idx
		WHERE p.user_id = #{userId}
		GROUP BY p.plan_idx, p.title, p.start_date, p.end_date;
	</select>
	
	<!-- 여행 일정 상세보기 -->
	<resultMap id="planDetailResponse" type="planDetailResponse">
		<result property="planIdx" column="plan_idx"/>
		<result property="title" column="title"/>
		<result property="startDate" column="start_date"/>
		<result property="endDate" column="end_date"/>
		<result property="userCount" column="user_count"/>
	</resultMap>
	<select id="getPlanDetail" parameterType="int" resultMap="planDetailResponse">
		<!-- in progress -->
	</select>
	
	<!-- 여행 계획 조회 -->
	<select id="getSelectAttractionPlan" parameterType="int" resultMap="selectAttractionPlanResponse">
		SELECT attractionId, at.title, at.first_image, at.addr1, at.content_id, orderNum, orderDate
		FROM enjoytrip.attraction_plan ap
		JOIN json_table(ap.attraction, '$[*]' COLUMNS (
		    attractionId int path '$.attractionId',
		    orderNum int path '$.order',
		    orderDate int path '$.orderDate'
		)) AS jt 
		JOIN enjoytrip.plan p ON ap.plan_idx = p.plan_idx
		JOIN attraction_info at ON jt.attractionId = at.content_id
		WHERE ap.plan_idx = #{planIdx};
		<!-- 
		select attractionId, at.title, at.first_image, at.addr1, at.content_id, orderNum, orderDate
		from enjoytrip.attraction_plan ap,
		json_table(ap.attraction, '$[*]' columns (
		attractionId int path '$.attractionId',
		orderNum int path '$.order',
		orderDate int path '$.orderDate'
		)) as jt
		join attraction_info at on jt.attractionId = at.content_id
		where attraction_plan_id = #{attractionPlanId}
		 -->
	</select>
	
	<select id="getModifyPlan" parameterType="int" resultMap="planGetModifyResponse">
		select title, start_date, end_date
		from plan
		where plan_idx = #{planIdx}
	</select>
	
	<update id="modifyPlan" parameterType="map">
		update plan
		set title = #{title}, start_date = #{startDate}, end_date = #{endDate}
		where plan_idx = #{planIdx}
	</update>

	<resultMap id="user" type="com.ssafy.trend_gaza.user.entity.User">
		<result property="userId" column="user_id" />
		<result property="userName" column="user_name" />
	</resultMap>
	
	<select id="getParticipant" parameterType="int" resultMap="user">
		SELECT up.user_id, u.user_name
	    FROM user_plan up
	    JOIN user u ON up.user_id = u.user_id
	    WHERE up.plan_idx = #{planIdx}
	</select>

</mapper>