<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.trend_gaza.review.repository.ReviewMapper">

	<resultMap type="com.ssafy.trend_gaza.review.entity.Review" id="review">
		<result column="review_idx" property="reviewIdx"></result>
		<result column="score" property="score"></result>
		<result column="title" property="title"></result>
		<result column="content" property="content"></result>
		<result column="companion" property="companion"></result>
		<result column="start_date" property="startDate"></result>
		<result column="end_date" property="endDate"></result>
		<result column="register_date" property="registerDate"></result>
		<result column="modify_date" property="modifyDate"></result>
		<result column="user_id" property="userId"></result>
		<result column="content_id" property="contentId"></result>
	</resultMap>
	
	<resultMap type="fileInfo" id="file">
		<result column="save_file" property="saveFile"/>
	</resultMap>
	
	<!--<resultMap type="com.ssafy.trend_gaza.Image.dto.ImagesResponse" id="imagesResponse">
		<result column="save_file" property="imageNames"/>
	</resultMap>-->
	
	<insert id="register" parameterType="review">
		insert into review (score, title, content, companion, start_date, end_date, register_date, user_id, content_id)
		values (#{score}, #{title}, #{content}, #{companion}, now(),  now(), now(), #{userId}, #{contentId})
		<selectKey resultType="int" keyProperty="reviewIdx" order="AFTER"> select last_insert_id() </selectKey>
	</insert>
	
	<insert id="registerFile" parameterType="review">
		insert into file_info (review_idx, save_file) values
		<foreach collection="fileInfos" item="fileinfo" separator=" , "> (#{reviewIdx}, #{fileinfo.saveFile}) </foreach>
	</insert>

	<sql id="search">
		<if test="word != null and word != ''">
			<if test="key == 'title'">
				and title like concat('%', #{word}, '%')
			</if>
			<if test="key != 'title'">
				and ${key} = #{word}
			</if>
		</if>
	</sql>
	
	<select id="list" parameterType="map" resultMap="review">
		select * from review
		<where>
			<include refid="search"></include>
		</where>
		order by register_date desc
		limit #{start}, #{listsize};
	</select>
	
	<select id="getTotalReviewCount" parameterType="map" resultType="int">
		select count(review_idx)
		from review
		<where>
			<include refid="search"></include>
		</where>
	</select>
	
	<select id="view" resultMap="review">
		select * from review
		where review_idx=#{reviewIdx}
	</select>
	
	<select id="getReviewImage" resultMap="file">
		select save_file
		from file_info
		where review_idx = #{reviewIdx}
	</select>
	
	<select id="getModify" parameterType="int" resultMap="review">
		select * from review
		where review_idx=#{reviewIdx}
	</select>
	 
	<update id="modify" parameterType="reviewModifyResponse">
		update review
		set modify_date=now(), score=#{score}, title=#{title}, content=#{content} 
		where review_idx=#{reviewIdx}
	</update>

	<delete id="delete" parameterType="int">
	    delete from review where review_idx=#{reviewIdx}
	</delete>
	
	<resultMap type="com.ssafy.trend_gaza.attraction.entity.AttractionInfo" id="attractionInfo">
	    <result column="content_id" property="contentId"></result>
	    <result column="title" property="title"></result>
	    <result column="first_image" property="firstImage"></result>
  	</resultMap>
	
	<select id="mostReviews" resultMap="attractionInfo">
	    SELECT ai.*
	    FROM attraction_info ai
	    JOIN review r ON ai.content_id = r.content_id
	    GROUP BY r.content_id
	    ORDER BY COUNT(r.review_idx) DESC
	    LIMIT 5;
  	</select>
  	
  	<select id="countScores" resultType="com.ssafy.trend_gaza.review.dto.ScoreCountResponse">
	    SELECT
	        content_id AS contentId,
	        SUM(CASE WHEN score = 1 THEN 1 ELSE 0 END) AS scoreOneCount,
	        SUM(CASE WHEN score = 2 THEN 1 ELSE 0 END) AS scoreTwoCount,
	        SUM(CASE WHEN score = 3 THEN 1 ELSE 0 END) AS scoreThreeCount,
	        SUM(CASE WHEN score = 4 THEN 1 ELSE 0 END) AS scoreFourCount,
	        SUM(CASE WHEN score = 5 THEN 1 ELSE 0 END) AS scoreFiveCount
	    FROM review
	    WHERE content_id = #{contentId}
	    GROUP BY content_id;
	</select>
	
	<select id="getReviewsByContentId" parameterType="int" resultMap="review">
		select * from review
		where content_id = #{contentId}
	</select>
	
</mapper>
